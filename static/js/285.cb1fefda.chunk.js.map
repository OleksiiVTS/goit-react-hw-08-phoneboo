{"version":3,"file":"static/js/285.cb1fefda.chunk.js","mappings":"8LAoEA,UAjEiB,WACf,IAAQA,GAAkBC,EAAAA,EAAAA,KAAlBD,cACFE,GAAWC,EAAAA,EAAAA,MAYjB,OACE,4BACE,SAAC,KAAD,CAAMC,GAAI,IAAV,SAAe,4BACf,wBAAI,cACJ,kBAAMC,SAdW,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,OAAOC,SAASC,MAC3BC,EAAQN,EAAIG,OAAOG,MAAMD,MACzBE,EAAWP,EAAIG,OAAOI,SAASF,MACrCX,EAAc,CAAEQ,KAAAA,EAAMI,MAAAA,EAAOC,SAAAA,IAC7BP,EAAIG,OAAOK,QACXZ,EAAS,YACV,EAMG,WACE,6BAAO,QAEL,mBACA,kBACEa,KAAK,OACLP,KAAK,WACLQ,aAAa,WAIbC,UAAQ,QAGZ,mBACA,6BAAO,UACC,mBACN,kBACEF,KAAK,QACLP,KAAK,QACLQ,aAAa,QAIbC,UAAQ,QAGZ,mBACA,6BAAO,aACI,mBACT,kBACEF,KAAK,WACLP,KAAK,WACLQ,aAAa,eAIbC,UAAQ,QAGZ,mBACA,mBAAQF,KAAK,SAAb,SAAsB,sBAI7B,C","sources":["pages/Register.jsx"],"sourcesContent":["import { Link, useNavigate } from 'react-router-dom';\nimport { useContacts } from 'redux/useContacts';\n\nconst Register = () => {\n  const { createNewUser } = useContacts();\n  const navigate = useNavigate();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const name = evt.target.username.value;\n    const email = evt.target.email.value;\n    const password = evt.target.password.value;\n    createNewUser({ name, email, password });\n    evt.target.reset();\n    navigate('/contacts');\n  };\n\n  return (\n    <div>\n      <Link to={'/'}>&#129044; Back Home</Link>\n      <h1>Register</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name\n          <br />\n          <input\n            type=\"text\"\n            name=\"username\"\n            autoComplete=\"username\"\n            // pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            // pattern=\"/\\[a-zA-Za-яА-Я]{10} [a-zA-Za-яА-Я]{10}/\"\n            // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <br />\n        <label>\n          Email <br />\n          <input\n            type=\"email\"\n            name=\"email\"\n            autoComplete=\"email\"\n            // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            // pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <br />\n        <label>\n          Password <br />\n          <input\n            type=\"password\"\n            name=\"password\"\n            autoComplete=\"new-password\"\n            // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            // pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Registration</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["createNewUser","useContacts","navigate","useNavigate","to","onSubmit","evt","preventDefault","name","target","username","value","email","password","reset","type","autoComplete","required"],"sourceRoot":""}