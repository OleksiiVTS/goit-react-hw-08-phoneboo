{"version":3,"file":"static/js/696.dd90532f.chunk.js","mappings":"kNACA,EAA6B,6BAA7B,EAAmE,yBCAnE,G,QAAuB,2BAAvB,EAA2D,6BAA3D,EAAiG,4B,oBCuDjG,EApDoB,WAClB,OAAuCA,EAAAA,EAAAA,KAA/BC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,YAkBvB,OACE,kBAAMC,UAAWC,EAAUC,SAjBR,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,OAAOD,KAAKE,MACvBC,EAASL,EAAIG,OAAOE,OAAOD,MAClBT,EAAcW,MAC3B,SAAAC,GAAE,OAAIA,EAAGL,KAAKM,sBAAwBN,EAAKM,mBAAzC,IAGFC,MAAM,GAAD,OAAIP,EAAJ,8BAGPN,EAAY,CAAEM,KAAAA,EAAMG,OAAAA,IAEpBL,EAAIG,OAAOO,QACZ,EAGC,WACE,iBAAKb,UAAWC,EAAhB,WACE,6BAAO,SACA,mBACL,kBACEa,KAAK,OACLT,KAAK,OACLU,QAAQ,oHAERC,MAAM,yIACNC,UAAQ,QAGZ,6BAAO,WACE,mBACP,kBACEH,KAAK,MACLT,KAAK,SAELU,QAAQ,qGACRC,MAAM,+FACNC,UAAQ,WAId,mBAAQjB,UAAWC,EAAYa,KAAK,SAApC,SAA6C,kBAKlD,ECrDD,EAA8B,iCAA9B,EAA6E,iCAA7E,EAAuH,4B,UC6CvH,EAxCoB,SAAC,GAA0B,IAAxBI,EAAuB,EAAvBA,GAAIb,EAAmB,EAAnBA,KAAMG,EAAa,EAAbA,OAC/B,GAA8CX,EAAAA,EAAAA,KAAtCsB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,kBAClBC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iCACE,yBACGjB,EAAK,KAAGG,MAEX,iBAAKR,UAAWC,EAAhB,WACE,mBACEa,KAAK,SACLE,MAAM,iBACNO,QAAS,kBAbfH,EAa4B,CAAEF,GAAAA,EAAIb,KAAAA,EAAMG,OAAAA,SAZxCa,EAAS,SAYM,EAHX,SAIC,YAGD,mBACEP,KAAK,SACLE,MAAM,iBACNO,QAAS,kBAAMJ,EAAeD,EAArB,EAHX,SAIC,cAMR,ECPD,EAzBoB,SAAC,GAAsB,IAApBM,EAAmB,EAAnBA,aACrB,OACE,iCACE,eAAIxB,UAAWC,EAAf,SACGuB,EAAaC,KAAI,SAAAC,GAAW,OAC3B,eAAI1B,UAAWC,EAAf,UACE,SAAC,EAAD,CACEiB,GAAIQ,EAAYR,GAChBb,KAAMqB,EAAYrB,KAClBG,OAAQkB,EAAYlB,UAJakB,EAAYR,GADtB,OAU/B,SAAC,KAAD,MAGL,ECTD,EAXe,WACb,IAAQS,GAAkB9B,EAAAA,EAAAA,KAAlB8B,cACR,OACE,+BACE,4BACE,kBAAOC,SAAU,SAAAzB,GAAG,OAAIwB,EAAcxB,EAAIG,OAAOC,MAA7B,OAI3B,EC4BD,EA/BiB,WACf,OAA6DV,EAAAA,EAAAA,KAArDgC,EAAR,EAAQA,gBAAiB/B,EAAzB,EAAyBA,cAAegC,EAAxC,EAAwCA,UAAWC,EAAnD,EAAmDA,MAEnD,OACE,4BACE,SAAC,KAAD,CAAMC,GAAI,IAAV,SAAe,4BACf,4BACE,qBAAShC,UAAWC,EAApB,WACE,wBAAI,kBACJ,SAAC,EAAD,QAEF,qBAASD,UAAWC,EAApB,WACE,wBAAI,cACJ,SAAC,EAAD,IACC6B,IAAcC,IACb,SAAC,KAAD,CACEE,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,aAAcnC,IAGjBH,EAAcuC,OAAS,IACtB,SAAC,EAAD,CAAab,aAAcK,YAMtC,C","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactItem.module.css?d8e1","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"appSection\":\"Contacts_appSection__mSMHX\",\"loader\":\"Contacts_loader__VcRwP\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formDiv\":\"ContactForm_formDiv__quSq+\",\"button\":\"ContactForm_button__eSwX9\"};","import React from 'react';\nimport css from './ContactForm.module.css';\nimport { useContacts } from 'redux/useContacts';\n\nconst ContactForm = () => {\n  const { valueContacts, addContacts } = useContacts();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const name = evt.target.name.value;\n    const number = evt.target.number.value;\n    const revise = valueContacts.find(\n      el => el.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n    );\n    if (revise) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n    addContacts({ name, number });\n\n    evt.target.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <div className={css.formDiv}>\n        <label>\n          Name <br />\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            // pattern=\"/\\[a-zA-Za-яА-Я]{10} [a-zA-Za-яА-Я]{10}/\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label>\n          Number <br />\n          <input\n            type=\"tel\"\n            name=\"number\"\n            // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n      </div>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"itemContact\":\"ContactItem_itemContact__I6KGO\",\"itemsButton\":\"ContactItem_itemsButton__mufWd\",\"listUl\":\"ContactItem_listUl__Hllp6\"};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { useContacts } from 'redux/useContacts';\nimport css from './ContactItem.module.css';\nimport { useNavigate } from 'react-router-dom';\n\nconst ContactItem = ({ id, name, number }) => {\n  const { deleteContacts, getUpdateContacts } = useContacts();\n  const navigate = useNavigate();\n\n  const update = contactData => {\n    getUpdateContacts(contactData);\n    navigate('update');\n  };\n\n  return (\n    <>\n      <p>\n        {name}: {number}\n      </p>\n      <div className={css.itemsButton}>\n        <button\n          type=\"button\"\n          title=\"Update contact\"\n          onClick={() => update({ id, name, number })}\n        >\n          ✎\n        </button>\n        <button\n          type=\"button\"\n          title=\"Delete contact\"\n          onClick={() => deleteContacts(id)}\n        >\n          &times;\n        </button>\n      </div>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport ContactItem from './ContactItem';\nimport React from 'react';\nimport css from './ContactItem.module.css';\nimport { Outlet } from 'react-router-dom';\n\nconst ContactList = ({ listContacts }) => {\n  return (\n    <>\n      <ul className={css.listUl}>\n        {listContacts.map(listContact => (\n          <li className={css.itemContact} key={listContact.id}>\n            <ContactItem\n              id={listContact.id}\n              name={listContact.name}\n              number={listContact.number}\n            />\n          </li>\n        ))}\n      </ul>\n      <Outlet />\n    </>\n  );\n};\n\nContactList.propTypes = {\n  listContacts: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.string.isRequired }).isRequired\n  ).isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { useContacts } from 'redux/useContacts';\n\nconst Filter = () => {\n  const { filterContact } = useContacts();\n  return (\n    <>\n      <label>\n        <input onChange={evt => filterContact(evt.target.value)} />\n      </label>\n    </>\n  );\n};\n\nexport default Filter;\n","import { Link } from 'react-router-dom';\nimport { Circles } from 'react-loader-spinner';\nimport css from './Contacts.module.css';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\nimport { useContacts } from 'redux/useContacts';\nimport React from 'react';\n\nconst Contacts = () => {\n  const { visibleContacts, valueContacts, isLoading, error } = useContacts();\n\n  return (\n    <div>\n      <Link to={'/'}>&#129044; Back Home</Link>\n      <div>\n        <section className={css.appSection}>\n          <h1>Add Contacts</h1>\n          <ContactForm />\n        </section>\n        <section className={css.appSection}>\n          <h2>Contacts</h2>\n          <Filter />\n          {isLoading && !error && (\n            <Circles\n              height=\"80\"\n              width=\"80\"\n              color=\"#4d78a9\"\n              wrapperClass={css.loader}\n            />\n          )}\n          {valueContacts.length > 0 && (\n            <ContactList listContacts={visibleContacts} />\n          )}\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["useContacts","valueContacts","addContacts","className","css","onSubmit","evt","preventDefault","name","target","value","number","find","el","toLocaleLowerCase","alert","reset","type","pattern","title","required","id","deleteContacts","getUpdateContacts","navigate","useNavigate","onClick","listContacts","map","listContact","filterContact","onChange","visibleContacts","isLoading","error","to","height","width","color","wrapperClass","length"],"sourceRoot":""}